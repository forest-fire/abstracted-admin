{"version":3,"file":"abstracted-admin.min.js","sources":["../lib/db.js","../node_modules/serialized-query/lib/serialized-query.js","../lib/index.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst firebase = require(\"firebase-admin\");\nconst process = require(\"process\");\nconst abstracted_firebase_1 = require(\"abstracted-firebase\");\nvar FirebaseBoolean;\n(function (FirebaseBoolean) {\n    FirebaseBoolean[FirebaseBoolean[\"true\"] = 1] = \"true\";\n    FirebaseBoolean[FirebaseBoolean[\"false\"] = 0] = \"false\";\n})(FirebaseBoolean = exports.FirebaseBoolean || (exports.FirebaseBoolean = {}));\nclass DB extends abstracted_firebase_1.RealTimeDB {\n    constructor(config = {}) {\n        super(config);\n        if (!config.mocking) {\n            this.connect(config.debugging);\n            abstracted_firebase_1.RealTimeDB.connection = firebase.database();\n            firebase.database().goOnline();\n            firebase\n                .database()\n                .ref(\".info/connected\")\n                .on(\"value\", snap => {\n                DB.isConnected = snap.val();\n                this._waitingForConnection.forEach(cb => cb());\n                this._waitingForConnection = [];\n                if (DB.isConnected) {\n                    this._onConnected.forEach(listener => listener.cb(this));\n                }\n                else {\n                    this._onDisconnected.forEach(listener => listener.cb(this));\n                }\n            });\n        }\n    }\n    waitForConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (DB.isConnected) {\n                return Promise.resolve();\n            }\n            return new Promise(resolve => {\n                const cb = () => {\n                    resolve();\n                };\n                this._waitingForConnection.push(cb);\n            });\n        });\n    }\n    get isConnected() {\n        return DB.isConnected;\n    }\n    connect(debugging = false) {\n        if (!DB.isAuthorized) {\n            const serviceAcctEncoded = process.env[\"FIREBASE_SERVICE_ACCOUNT\"];\n            if (!serviceAcctEncoded) {\n                throw new Error(\"Problem loading the credientials for Firebase admin API. Please ensure FIREBASE_SERVICE_ACCOUNT is set with base64 encoded version of Firebase private key.\");\n            }\n            const serviceAccount = JSON.parse(Buffer.from(process.env[\"FIREBASE_SERVICE_ACCOUNT\"], \"base64\").toString());\n            console.log(`Connecting to Firebase: [${process.env[\"FIREBASE_DATA_ROOT_URL\"]}]`);\n            try {\n                firebase.initializeApp({\n                    credential: firebase.credential.cert(serviceAccount),\n                    databaseURL: process.env[\"FIREBASE_DATA_ROOT_URL\"]\n                });\n                DB.isAuthorized = true;\n            }\n            catch (err) {\n                if (err.message.indexOf(\"The default Firebase app already exists.\") !== -1) {\n                    console.warn(\"DB was already logged in, however flag had not been set!\");\n                    DB.isConnected = true;\n                }\n                else {\n                    DB.isConnected = false;\n                    console.warn(\"Problem connecting to Firebase\", err);\n                    throw new Error(err);\n                }\n            }\n        }\n        if (debugging) {\n            firebase.database.enableLogging(typeof debugging === \"function\"\n                ? (message) => debugging(message)\n                : (message) => console.log(\"[FIREBASE]\", message));\n        }\n    }\n}\nexports.DB = DB;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction slashNotation(path) {\n    return path.replace(/\\./g, \"/\");\n}\nexports.slashNotation = slashNotation;\nclass SerializedQuery {\n    constructor(path = \"/\") {\n        this._orderBy = \"orderByKey\";\n        this._path = typeof path === \"string\" ? slashNotation(path) : path;\n    }\n    static path(path = \"/\") {\n        return new SerializedQuery(path);\n    }\n    get path() {\n        return this._path;\n    }\n    setPath(path) {\n        this._path = typeof path === \"string\" ? slashNotation(path) : path;\n        return this;\n    }\n    limitToFirst(num) {\n        this._limitToFirst = num;\n        return this;\n    }\n    limitToLast(num) {\n        this._limitToLast = num;\n        return this;\n    }\n    orderByChild(child) {\n        this._orderBy = \"orderByChild\";\n        this._orderKey = child;\n        return this;\n    }\n    orderByValue() {\n        this._orderBy = \"orderByValue\";\n        return this;\n    }\n    orderByKey() {\n        this._orderBy = \"orderByKey\";\n        return this;\n    }\n    startAt(value, key) {\n        this.validateNoKey(\"startAt\", key);\n        this._startAt = value;\n        return this;\n    }\n    endAt(value, key) {\n        this.validateNoKey(\"endAt\", key);\n        this._endAt = value;\n        return this;\n    }\n    equalTo(value, key) {\n        this.validateNoKey(\"equalTo\", key);\n        this._equalTo = value;\n        return this;\n    }\n    setDB(db) {\n        this.db = db;\n        return this;\n    }\n    deserialize(db) {\n        if (!db) {\n            db = this.db;\n        }\n        let q = db.ref(typeof this._path === \"function\" ? slashNotation(this._path()) : this._path);\n        switch (this._orderBy) {\n            case \"orderByKey\":\n                q = q.orderByKey();\n                break;\n            case \"orderByValue\":\n                q = q.orderByValue();\n                break;\n            case \"orderByChild\":\n                q = q.orderByChild(this._orderKey);\n                break;\n        }\n        if (this._limitToFirst) {\n            q = q.limitToFirst(this._limitToFirst);\n        }\n        if (this._limitToLast) {\n            q = q.limitToLast(this._limitToLast);\n        }\n        if (this._startAt) {\n            q = q.startAt(this._startAt);\n        }\n        if (this._endAt) {\n            q = q.endAt(this._endAt);\n        }\n        if (this._startAt) {\n            q = q.startAt(this._startAt);\n        }\n        if (this._equalTo) {\n            q = q.equalTo(this._equalTo);\n        }\n        return q;\n    }\n    handleSnapshot(fn) {\n        this._handleSnapshot = fn;\n        return this;\n    }\n    execute() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const snap = yield this.deserialize().once(\"value\");\n            return this._handleSnapshot ? this._handleSnapshot(snap) : snap;\n        });\n    }\n    where(operation, value) {\n        switch (operation) {\n            case \"=\":\n                return this.equalTo(value);\n            case \">\":\n                return this.startAt(value);\n            case \"<\":\n                return this.endAt(value);\n            default:\n                const e = new Error(`Unknown comparison operator: ${operation}`);\n                e.code = \"invalid-operator\";\n                throw e;\n        }\n    }\n    toJSON() {\n        return JSON.stringify({\n            orderBy: this._orderBy,\n            orderByKey: this._orderKey,\n            limitToFirst: this._limitToFirst,\n            limitToLast: this._limitToLast,\n            startAt: this._startAt,\n            endAt: this._endAt,\n            equalTo: this._equalTo,\n            path: this._path\n        });\n    }\n    toString() {\n        return JSON.stringify({\n            orderBy: this._orderBy,\n            orderByKey: this._orderKey,\n            limitToFirst: this._limitToFirst,\n            limitToLast: this._limitToLast,\n            startAt: this._startAt,\n            endAt: this._endAt,\n            equalTo: this._equalTo,\n            path: this._path\n        }, null, 2);\n    }\n    validateNoKey(caller, key) {\n        if (key && this._orderBy === \"orderByKey\") {\n            throw new Error(`You can not use the \"key\" parameter with ${caller}() when using the ${this._orderBy} sort.`);\n        }\n    }\n}\nexports.SerializedQuery = SerializedQuery;\n//# sourceMappingURL=serialized-query.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst db_1 = require(\"./db\");\nvar serialized_query_1 = require(\"serialized-query\");\nexports.SerializedQuery = serialized_query_1.SerializedQuery;\nexports.default = db_1.DB;\nvar db_2 = require(\"./db\");\nexports.DB = db_2.DB;\nexports.FirebaseBoolean = db_2.FirebaseBoolean;\nvar abstracted_firebase_1 = require(\"abstracted-firebase\");\nexports.RealTimeDB = abstracted_firebase_1.RealTimeDB;\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","next","e","rejected","step","result","done","then","apply","Object","defineProperty","exports","firebase","require","process","abstracted_firebase_1","FirebaseBoolean","DB","config","mocking","connect","debugging","RealTimeDB","connection","database","goOnline","ref","on","isConnected","snap","val","_waitingForConnection","forEach","cb","_onConnected","listener","_onDisconnected","this","push","isAuthorized","env","Error","serviceAccount","JSON","parse","Buffer","from","toString","log","initializeApp","credential","cert","err","message","indexOf","warn","enableLogging","console","slashNotation","path","replace","SerializedQuery","[object Object]","_orderBy","_path","num","_limitToFirst","_limitToLast","child","_orderKey","key","validateNoKey","_startAt","_endAt","_equalTo","db","q","orderByKey","orderByValue","orderByChild","limitToFirst","limitToLast","startAt","endAt","equalTo","fn","_handleSnapshot","deserialize","once","operation","code","stringify","orderBy","caller","serialized_query_1","db_1","db_2"],"mappings":"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"}