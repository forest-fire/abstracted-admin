{"version":3,"file":"abstracted-admin.cjs.js","sources":["esnext/db.js"],"sourcesContent":["import * as firebase from \"firebase-admin\";\nimport * as process from \"process\";\nimport { RealTimeDB } from \"abstracted-firebase\";\nexport class DB extends RealTimeDB {\n    constructor(config = {}) {\n        super(config);\n        if (!config.mocking) {\n            this.connect(config.debugging);\n            RealTimeDB.connection = firebase.database();\n            firebase.database().goOnline();\n            firebase\n                .database()\n                .ref(\".info/connected\")\n                .on(\"value\", snap => {\n                DB.isConnected = snap.val();\n                // cycle through temporary clients\n                this._waitingForConnection.forEach(cb => cb());\n                this._waitingForConnection = [];\n                // call active listeners\n                if (DB.isConnected) {\n                    this._onConnected.forEach(listener => listener.cb(this));\n                }\n                else {\n                    this._onDisconnected.forEach(listener => listener.cb(this));\n                }\n            });\n        }\n    }\n    async waitForConnection() {\n        if (DB.isConnected) {\n            return Promise.resolve();\n        }\n        return new Promise(resolve => {\n            const cb = () => {\n                resolve();\n            };\n            this._waitingForConnection.push(cb);\n        });\n    }\n    get isConnected() {\n        return DB.isConnected;\n    }\n    connect(debugging = false) {\n        if (!DB.isAuthorized) {\n            const serviceAcctEncoded = process.env[\"FIREBASE_SERVICE_ACCOUNT\"];\n            if (!serviceAcctEncoded) {\n                throw new Error(\"Problem loading the credientials for Firebase admin API. Please ensure FIREBASE_SERVICE_ACCOUNT is set with base64 encoded version of Firebase private key.\");\n            }\n            const serviceAccount = JSON.parse(Buffer.from(process.env[\"FIREBASE_SERVICE_ACCOUNT\"], \"base64\").toString());\n            console.log(`Connecting to Firebase: [${process.env[\"FIREBASE_DATA_ROOT_URL\"]}]`);\n            try {\n                firebase.initializeApp({\n                    credential: firebase.credential.cert(serviceAccount),\n                    databaseURL: process.env[\"FIREBASE_DATA_ROOT_URL\"]\n                });\n                DB.isAuthorized = true;\n            }\n            catch (err) {\n                if (err.message.indexOf(\"The default Firebase app already exists.\") !== -1) {\n                    console.warn(\"DB was already logged in, however flag had not been set!\");\n                    DB.isConnected = true;\n                }\n                else {\n                    DB.isConnected = false;\n                    console.warn(\"Problem connecting to Firebase\", err);\n                    throw new Error(err);\n                }\n            }\n        }\n        if (debugging) {\n            firebase.database.enableLogging(typeof debugging === \"function\"\n                ? (message) => debugging(message)\n                : (message) => console.log(\"[FIREBASE]\", message));\n        }\n    }\n}\n"],"names":["RealTimeDB","firebase.database","firebase\n                .database","process.env","firebase.initializeApp","firebase.credential"],"mappings":"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"}